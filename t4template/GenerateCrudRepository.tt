<#@ template language="C#" hostspecific="true" #>
<#@ include file="T4Settings.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.IO" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Threading.Tasks" #>

<#
    // don't modify this
    string namespaceName = $"{rootFolder}.{DALProjectName}.Interfaces";

    // Determine the output folder relative to the template file
    string templateDirectory = Path.GetDirectoryName(Host.TemplateFile);
    string outputFolder = Path.Combine(templateDirectory, $"../{DALProjectName}/Repositories");

    if (!Directory.Exists(outputFolder))
    {
        Directory.CreateDirectory(outputFolder);
    }

    // Determine the output file path
    string outputFilePath = Path.Combine(outputFolder, $"{entityName}Repository.cs");

    // Generate the content
    string content = $@"
using {rootFolder}.{DALProjectName}.Interfaces;
using {rootFolder}.{DALProjectName}.Models;

namespace {namespaceName}
{{
    public class {entityName}Repository : I{entityName}Repository
    {{
        public async Task Create({entityName} entity)
        {{
            // Implementation for creating an entity
        }}

        public async Task<{entityName}> Read(string id)
        {{
            // Implementation for reading an entity
            return null;
        }}

        public async Task<{entityName}> Update({entityName} entity)
        {{
            // Implementation for updating an entity
            return null;
        }}

        public async Task<bool> Delete(string id)
        {{
            // Implementation for deleting an entity
            return true;
        }}
    }}
}}";

    // Write the content to the specified file path
    File.WriteAllText(outputFilePath, content);
#>
